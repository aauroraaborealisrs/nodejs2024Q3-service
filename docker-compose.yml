services:
  app:
    build:
      context: .
    image: aauroraaborealisrs/nest-api:latest
    container_name: nestjs_typeorm_dev
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./src:/usr/src/app/src
      - /usr/src/app/node_modules
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - database
    networks:
      - app_network
    entrypoint: ["sh", "-c", "npm run build && npm run migration:run && npm run start:dev"]
    restart: always

  database:
    image: postgres:15-alpine
    container_name: postgres_dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT_3}:${POSTGRES_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  db_data:

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String   @unique
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Track {
  id       String    @id @default(uuid())
  name     String
  artistId String?   @unique
  albumId  String?   @unique
  duration Int
  favTrack FavTrack?
  album    Album?    @relation(fields: [albumId], references: [id])
  artist   Artist?   @relation(fields: [artistId], references: [id])
}

model Artist {
  id        String     @id @default(uuid())
  name      String
  grammy    Boolean
  albums    Album?
  favArtist FavArtist?
  tracks    Track?
}

model Album {
  id       String    @id @default(uuid())
  name     String
  year     Int
  artistId String?   @unique
  artist   Artist?   @relation(fields: [artistId], references: [id])
  favAlbum FavAlbum?
  tracks   Track?
}

model FavTrack {
  id      String @id @default(uuid())
  trackId String @unique
  track   Track  @relation(fields: [trackId], references: [id], onDelete: Cascade)
}

model FavAlbum {
  id      String @id @default(uuid())
  albumId String @unique
  album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
}

model FavArtist {
  id       String @id @default(uuid())
  artistId String @unique
  artist   Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
}
